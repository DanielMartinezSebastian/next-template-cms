# Next.js Template - Desarrollo Local con PostgreSQL
# Configuración optimizada para desarrollo con persistencia y performance

services:
  # Base de datos PostgreSQL para desarrollo
  postgres-dev:
    image: postgres:16-alpine
    container_name: nextjs-template-postgres-dev
    restart: unless-stopped
    environment:
      # Configuración de base de datos
      POSTGRES_DB: nextjs_template_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password_2024

      # Configuración de performance para desarrollo
      POSTGRES_SHARED_PRELOAD_LIBRARIES: 'pg_stat_statements'
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB

    ports:
      - '5432:5432'

    volumes:
      # Persistencia de datos
      - postgres_dev_data:/var/lib/postgresql/data

      # Scripts de inicialización
      - ./database/init:/docker-entrypoint-initdb.d

      # Configuración personalizada
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf

    # Configuración de red
    networks:
      - nextjs-dev-network

    # Health check para verificar que la DB esté lista
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U dev_user -d nextjs_template_dev']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Administrador de base de datos (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nextjs-template-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_2024
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin-servers.json:/pgadmin4/servers.json
    networks:
      - nextjs-dev-network
    depends_on:
      postgres-dev:
        condition: service_healthy

  # Redis para cache de desarrollo (opcional)
  redis-dev:
    image: redis:7-alpine
    container_name: nextjs-template-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - nextjs-dev-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

# Definición de volúmenes persistentes
volumes:
  postgres_dev_data:
    name: nextjs_template_postgres_dev_data
    driver: local

  pgadmin_data:
    name: nextjs_template_pgadmin_data
    driver: local

  redis_dev_data:
    name: nextjs_template_redis_dev_data
    driver: local

# Red aislada para servicios de desarrollo
networks:
  nextjs-dev-network:
    name: nextjs-template-dev-network
    driver: bridge
