{
	"version": "2.0.0",
	"tasks": [
		// =============================================================================
		// DEVELOPMENT WORKFLOW TASKS
		// =============================================================================
		{
			"label": "🚀 Dev: Start Development Server",
			"type": "shell",
			"command": "npm run dev",
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"isBackground": true,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": [
				"$tsc-watch"
			],
			"options": {
				"statusbar": {
					"label": "$(play) Dev Server"
				}
			}
		},
		{
			"label": "📦 Install Dependencies",
			"type": "shell",
			"command": "npm install",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🏗️ Build Project",
			"type": "shell",
			"command": "npm run build",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$tsc"
			]
		},
		{
			"label": "🧪 Run Tests",
			"type": "shell",
			"command": "npm run test",
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🎭 Playwright Tests",
			"type": "shell",
			"command": "npm run test:e2e",
			"group": "test",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},

		// =============================================================================
		// CODE QUALITY TASKS
		// =============================================================================
		{
			"label": "🔍 TypeScript Check",
			"type": "shell",
			"command": "npm run type-check",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$tsc"
			]
		},
		{
			"label": "🧹 Lint Code",
			"type": "shell",
			"command": "npm run lint",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$eslint-stylish"
			]
		},
		{
			"label": "🛠️ Fix Linting Issues",
			"type": "shell",
			"command": "npm run lint:fix",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$eslint-stylish"
			]
		},
		{
			"label": "🎨 Format Code",
			"type": "shell",
			"command": "npm run format",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "✔️ Format Check",
			"type": "shell",
			"command": "npm run format:check",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},

		// =============================================================================
		// COMBINED WORKFLOW TASKS
		// =============================================================================
		{
			"label": "🔥 Quick Check",
			"type": "shell",
			"command": "npm run type-check && npm run lint:check && npm run format:check",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$tsc",
				"$eslint-stylish"
			]
		},
		{
			"label": "🚨 Pre-commit Check",
			"type": "shell",
			"command": "npm run type-check && npm run lint && npm run format",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$tsc",
				"$eslint-stylish"
			]
		},
		{
			"label": "🎯 Full Validation",
			"type": "shell",
			"command": "npm run type-check && npm run lint && npm run format && npm run build",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [
				"$tsc",
				"$eslint-stylish"
			]
		},

		// =============================================================================
		// INTERNATIONALIZATION TASKS
		// =============================================================================
		{
			"label": "🌐 Translation Metrics",
			"type": "shell",
			"command": "curl -s http://localhost:3001/api/translations/metrics | jq .",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🔄 Reset Translation Cache",
			"type": "shell",
			"command": "curl -X POST http://localhost:3001/api/translations/metrics -H 'Content-Type: application/json' -d '{\"action\":\"reset\"}'",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},

		// =============================================================================
		// GIT WORKFLOW TASKS
		// =============================================================================
		{
			"label": "📊 Git Status",
			"type": "shell",
			"command": "git status",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "📝 Git Log",
			"type": "shell",
			"command": "git log --oneline -10",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🌳 Git Branches",
			"type": "shell",
			"command": "git branch -v",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "💾 Git Commit",
			"type": "shell",
			"command": "git commit -m \"feat: Foundation Enhancement completed - Ready for Database Phase\" --no-verify",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🌿 Create Database Branch",
			"type": "shell",
			"command": "git checkout -b feature/database-components-implementation",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🗃️ Generate Prisma Client",
			"type": "shell",
			"command": "npx prisma generate",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🗃️ Push Database Schema",
			"type": "shell",
			"command": "npx prisma db push",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🗃️ Open Prisma Studio",
			"type": "shell",
			"command": "npm run db:studio",
			"group": "build",
			"isBackground": true,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			},
			"problemMatcher": []
		},

		// =============================================================================
		// LOCAL DATABASE DEVELOPMENT TASKS
		// =============================================================================
		{
			"label": "🐳 Database: Setup Local Environment",
			"type": "shell",
			"command": "./scripts/database/setup.sh",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"clear": true
			},
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"label": "$(database) Setup DB"
				}
			}
		},
		{
			"label": "🔄 Database: Reset (DESTRUCTIVE)",
			"type": "shell",
			"command": "./scripts/database/reset.sh",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared",
				"clear": true
			},
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"label": "$(trash) Reset DB"
				}
			}
		},
		{
			"label": "🌱 Database: Seed Development Data",
			"type": "shell",
			"command": "./scripts/database/seed.sh",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"label": "$(symbol-misc) Seed DB"
				}
			}
		},
		{
			"label": "📊 Database: Check Status",
			"type": "shell",
			"command": "./scripts/database/status.sh",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": [],
			"options": {
				"statusbar": {
					"label": "$(pulse) DB Status"
				}
			}
		},
		{
			"label": "🔧 Database: Start Services",
			"type": "shell",
			"command": "docker-compose -f docker-compose.dev.yml up -d",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "🛑 Database: Stop Services",
			"type": "shell",
			"command": "docker-compose -f docker-compose.dev.yml down",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "📝 Database: View Logs",
			"type": "shell",
			"command": "docker-compose -f docker-compose.dev.yml logs -f",
			"group": "build",
			"isBackground": true,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "🌐 Database: Open pgAdmin",
			"type": "shell",
			"command": "open http://localhost:8080 || xdg-open http://localhost:8080",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "silent",
				"focus": false,
				"panel": "shared"
			},
			"problemMatcher": []
		},

		// =============================================================================
		// MAINTENANCE TASKS
		// =============================================================================
		{
			"label": "🧽 Clean Project",
			"type": "shell",
			"command": "rm -rf .next && rm -rf node_modules/.cache && npm run build",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "📊 Project Info",
			"type": "shell",
			"command": "echo '📦 Dependencies:' && npm list --depth=0 && echo '\\n🔧 Scripts:' && npm run",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},

		{
			"label": "🔄 Git Add All",
			"type": "shell",
			"command": "git add .",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "� Git Commit Tasks Update",
			"type": "shell",
			"command": "git commit -m \"chore: Update task operations\"",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "�🔄 Git Checkout Main",
			"type": "shell",
			"command": "git checkout main",
			"group": "build",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			},
			"problemMatcher": []
		},
		{
			"label": "Start Development Server",
			"type": "shell",
			"command": "npm run dev",
			"isBackground": true,
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		}
	]
}
	